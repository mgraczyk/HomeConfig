#!/usr/bin/python3

import argparse
import sys
import datetime
import re


def parse_date_spec(datestamp_spec):
    today = datetime.datetime.now().date()
    day = datetime.timedelta(days=1)
    s = datestamp_spec.lower()
    if s == 'yesterday':
        return (today - day, )

    m = re.match(r"(?:last|past)?\s*(\d+)\s*(?:days?)?", datestamp_spec)
    if m:
        return [(today - (i + 1) * day) for i in range(0, int(m.group(1)))]

    raise ValueError("Don't know how to parse \"{}\"".format(datestamp_spec))


def get_arg_parser():
    parser = argparse.ArgumentParser(
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument(
        "datestamp_spec",
        nargs="*",
        default=("yesterday", ),
        help="""
      A string specifying the datestamp list to product.
      Examples:
        today -> "2019-11-07"
      """)

    return parser


def compute_mse(ref, test):
    return np.mean(np.square(ref - test)) / np.mean(np.square(ref))


def main(argv):
    opts = get_arg_parser().parse_args(argv[1:])

    dates = parse_date_spec(' '.join(opts.datestamp_spec))
    print(' '.join(d.strftime('%Y-%m-%d') for d in sorted(dates)))


if __name__ == "__main__":
    main(sys.argv)
